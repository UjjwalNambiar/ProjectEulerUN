/*
Project Euler: Problem 7: 10001st prime
By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13.
What is the nth prime number?
*/

//SOLUTION
//This solution works but is not time-efficient. On FreeCodeCamp, the tests for n = 1000 and n = 10001. 
//Troubleshooting showed that the primes being returned would change whenever I reentered the same parameter,
//telling me that the function is not the issue, but its efficiency.
//As such, I will need to tinker up more time-efficient methods to solve this.

function isPrime(n) {
  if (n == 1) {
    return false;
  }

  for (var i = 2; i < n; i++) {
    if (n % i == 0) {
      return false;
    }
  }

  return true;
}

function nthPrime(n) {
  var count = 0;
  var i = 1;
  var prime = 0;
  
  while (count != n) {
    if (isPrime(i)) {
      //console.log(i);
      prime = i;
      count++;
      i++;
    } else {
      i++;
    }
  }
return prime;
}
