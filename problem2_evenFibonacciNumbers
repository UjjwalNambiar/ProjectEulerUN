/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed nth term, find the sum of the even-valued terms. 
*/

//SOLUTION:

//We have a helper function fibo(n), which returns the nth term of the Fibonacci sequence, where a0 = 1, a1 = 2, a2 = 3, etc.
//For our main function fiboEvenSum(n), we initalize a sum variable to 0.
//We have a for loop that runs through all natural numbers from 1 to n. An if statement checks if fibo(i) is even.
//If so, it adds fibo(i) to sum.
//When we break from the for loop, we return sum.

"index.js"

//fibo(n) returns the nth term of the Fibonacci sequence
function fibo(n) {
  var fibo0 = 1;
  var fibo1 = 2;
  var interim1 = fibo0;
  var interim2 = fibo1;
  var fibon = 0;

  if (n == 0) {
    return fibo0;
  } 
  if (n == 1) {
    return fibo1;
  }

  for (var i = 1; i < n; i++) {
    fibon = interim1 + interim2;
    interim1 = interim2;
    interim2 = fibon;
  }
  return fibon;
}

//fiboEvenSum(n) returns the sum of the even Fibonacci terms that are less than the nth Fibonacci term
function fiboEvenSum(n) {
  var sum = 0;

  for (var i = 1; i <= n; i++) {
    if (fibo(i) % 2 == 0) {
      sum += fibo(i);
    }
  }
  
  return sum;
}
